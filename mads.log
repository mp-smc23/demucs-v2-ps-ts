Experiment musdb=pstsm
Demucs(
  (encoder): ModuleList(
    (0): Sequential(
      (0): Conv1d(2, 32, kernel_size=(8,), stride=(4,))
      (1): ReLU()
      (2): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (3): GLU(dim=1)
    )
    (1): Sequential(
      (0): Conv1d(32, 64, kernel_size=(8,), stride=(4,))
      (1): ReLU()
      (2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
      (3): GLU(dim=1)
    )
    (2): Sequential(
      (0): Conv1d(64, 128, kernel_size=(8,), stride=(4,))
      (1): ReLU()
      (2): Conv1d(128, 256, kernel_size=(1,), stride=(1,))
      (3): GLU(dim=1)
    )
    (3): Sequential(
      (0): Conv1d(128, 256, kernel_size=(8,), stride=(4,))
      (1): ReLU()
      (2): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
      (3): GLU(dim=1)
    )
    (4): Sequential(
      (0): Conv1d(256, 512, kernel_size=(8,), stride=(4,))
      (1): ReLU()
      (2): Conv1d(512, 1024, kernel_size=(1,), stride=(1,))
      (3): GLU(dim=1)
    )
    (5): Sequential(
      (0): Conv1d(512, 1024, kernel_size=(8,), stride=(4,))
      (1): ReLU()
      (2): Conv1d(1024, 2048, kernel_size=(1,), stride=(1,))
      (3): GLU(dim=1)
    )
  )
  (decoder): ModuleList(
    (0): Sequential(
      (0): Conv1d(1024, 2048, kernel_size=(3,), stride=(1,))
      (1): GLU(dim=1)
      (2): ConvTranspose1d(1024, 512, kernel_size=(8,), stride=(4,))
      (3): ReLU()
    )
    (1): Sequential(
      (0): Conv1d(512, 1024, kernel_size=(3,), stride=(1,))
      (1): GLU(dim=1)
      (2): ConvTranspose1d(512, 256, kernel_size=(8,), stride=(4,))
      (3): ReLU()
    )
    (2): Sequential(
      (0): Conv1d(256, 512, kernel_size=(3,), stride=(1,))
      (1): GLU(dim=1)
      (2): ConvTranspose1d(256, 128, kernel_size=(8,), stride=(4,))
      (3): ReLU()
    )
    (3): Sequential(
      (0): Conv1d(128, 256, kernel_size=(3,), stride=(1,))
      (1): GLU(dim=1)
      (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(4,))
      (3): ReLU()
    )
    (4): Sequential(
      (0): Conv1d(64, 128, kernel_size=(3,), stride=(1,))
      (1): GLU(dim=1)
      (2): ConvTranspose1d(64, 32, kernel_size=(8,), stride=(4,))
      (3): ReLU()
    )
    (5): Sequential(
      (0): Conv1d(32, 64, kernel_size=(3,), stride=(1,))
      (1): GLU(dim=1)
      (2): ConvTranspose1d(32, 14, kernel_size=(8,), stride=(4,))
    )
  )
  (lstm): BLSTM(
    (lstm): LSTM(1024, 1024, num_layers=2, bidirectional=True)
    (linear): Linear(in_features=2048, out_features=1024, bias=True)
  )
)
_init_args_kwargs : ((), {'audio_channels': 2, 'channels': 32, 'context': 3, 'depth': 6, 'glu': True, 'growth': 2.0, 'kernel_size': 8, 'lstm_layers': 2, 'rescale': 0.1, 'rewrite': True, 'stride': 4, 'resample': True, 'normalize': False, 'samplerate': 16000, 'segment_length': 640000, 'sources': ['spk1', 'spk2', 'spk3', 'spk4', 'spk5', 'spk6', 'spk7']})
training : True
_parameters : {}
_buffers : {}
_non_persistent_buffers_set : set()
_backward_pre_hooks : OrderedDict()
_backward_hooks : OrderedDict()
_is_full_backward_hook : None
_forward_hooks : OrderedDict()
_forward_hooks_with_kwargs : OrderedDict()
_forward_hooks_always_called : OrderedDict()
_forward_pre_hooks : OrderedDict()
_forward_pre_hooks_with_kwargs : OrderedDict()
_state_dict_hooks : OrderedDict()
_state_dict_pre_hooks : OrderedDict()
_load_state_dict_pre_hooks : OrderedDict()
_load_state_dict_post_hooks : OrderedDict()
_modules : {'encoder': ModuleList(
  (0): Sequential(
    (0): Conv1d(2, 32, kernel_size=(8,), stride=(4,))
    (1): ReLU()
    (2): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
    (3): GLU(dim=1)
  )
  (1): Sequential(
    (0): Conv1d(32, 64, kernel_size=(8,), stride=(4,))
    (1): ReLU()
    (2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
    (3): GLU(dim=1)
  )
  (2): Sequential(
    (0): Conv1d(64, 128, kernel_size=(8,), stride=(4,))
    (1): ReLU()
    (2): Conv1d(128, 256, kernel_size=(1,), stride=(1,))
    (3): GLU(dim=1)
  )
  (3): Sequential(
    (0): Conv1d(128, 256, kernel_size=(8,), stride=(4,))
    (1): ReLU()
    (2): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    (3): GLU(dim=1)
  )
  (4): Sequential(
    (0): Conv1d(256, 512, kernel_size=(8,), stride=(4,))
    (1): ReLU()
    (2): Conv1d(512, 1024, kernel_size=(1,), stride=(1,))
    (3): GLU(dim=1)
  )
  (5): Sequential(
    (0): Conv1d(512, 1024, kernel_size=(8,), stride=(4,))
    (1): ReLU()
    (2): Conv1d(1024, 2048, kernel_size=(1,), stride=(1,))
    (3): GLU(dim=1)
  )
), 'decoder': ModuleList(
  (0): Sequential(
    (0): Conv1d(1024, 2048, kernel_size=(3,), stride=(1,))
    (1): GLU(dim=1)
    (2): ConvTranspose1d(1024, 512, kernel_size=(8,), stride=(4,))
    (3): ReLU()
  )
  (1): Sequential(
    (0): Conv1d(512, 1024, kernel_size=(3,), stride=(1,))
    (1): GLU(dim=1)
    (2): ConvTranspose1d(512, 256, kernel_size=(8,), stride=(4,))
    (3): ReLU()
  )
  (2): Sequential(
    (0): Conv1d(256, 512, kernel_size=(3,), stride=(1,))
    (1): GLU(dim=1)
    (2): ConvTranspose1d(256, 128, kernel_size=(8,), stride=(4,))
    (3): ReLU()
  )
  (3): Sequential(
    (0): Conv1d(128, 256, kernel_size=(3,), stride=(1,))
    (1): GLU(dim=1)
    (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(4,))
    (3): ReLU()
  )
  (4): Sequential(
    (0): Conv1d(64, 128, kernel_size=(3,), stride=(1,))
    (1): GLU(dim=1)
    (2): ConvTranspose1d(64, 32, kernel_size=(8,), stride=(4,))
    (3): ReLU()
  )
  (5): Sequential(
    (0): Conv1d(32, 64, kernel_size=(3,), stride=(1,))
    (1): GLU(dim=1)
    (2): ConvTranspose1d(32, 14, kernel_size=(8,), stride=(4,))
  )
), 'lstm': BLSTM(
  (lstm): LSTM(1024, 1024, num_layers=2, bidirectional=True)
  (linear): Linear(in_features=2048, out_features=1024, bias=True)
)}
audio_channels : 2
sources : ['spk1', 'spk2', 'spk3', 'spk4', 'spk5', 'spk6', 'spk7']
kernel_size : 8
context : 3
stride : 4
depth : 6
resample : True
channels : 32
normalize : False
samplerate : 16000
segment_length : 640000
Model size 253.5MiB
